version: '3'

services:
  nifi:
    build:
      context: .
      dockerfile_inline: |
        FROM apache/nifi:2.0.0-M2
        USER root
        RUN apt update
        RUN apt install -y postgresql postgresql-contrib
        USER nifi
        RUN curl https://repo1.maven.org/maven2/org/postgresql/postgresql/42.7.2/postgresql-42.7.2.jar --output postgresql-42.7.2.jar
        RUN cp postgresql-42.7.2.jar /opt/nifi/nifi-current/lib/

        RUN curl https://repo1.maven.org/maven2/com/mysql/mysql-connector-j/8.3.0/mysql-connector-j-8.3.0.jar --output mysql-connector-j-8.3.0.jar
        RUN cp mysql-connector-j-8.3.0.jar /opt/nifi/nifi-current/lib/
    ports:
      - "8443:8443"
      - "5555:5555"
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=admin123456789
      - NIFI_WEB_HTTPS_PORT=8443
    volumes:
      - .:/data
      - nifi:/opt

  registry:
    image: apache/nifi-registry:2.0.0-M2
    ports:
      - "18080:18080"
    volumes:
      - registry:/opt

  db:
    image: postgres:alpine3.19
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"

  mongo:
    build:
      context: .
      dockerfile_inline: |
        FROM mongodb/mongodb-community-server:5.0.15-ubuntu2004 
        RUN echo 'db.createCollection("cuentas")' >> /tmp/m.mongodb
        RUN echo 'db.createCollection("test")' >> /tmp/m.mongodb

        RUN echo 'python3 /usr/local/bin/docker-entrypoint.py mongod &' >> /tmp/init.sh
        RUN echo 'sleep 60 && uname -a && mongosh --username admin --password admin /tmp/m.mongodb && while :; do sleep 100000; done' >> /tmp/init.sh

        RUN chmod 777 /tmp/init.sh
        RUN chmod 777 /tmp/m.mongodb

        ENTRYPOINT ["/bin/bash"]
        CMD ["/tmp/init.sh"]
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    ports:
      - "27017:27017"

  mysql:
    image: mysql:8.3.0
    environment:
      - MYSQL_USER=mysql
      - MYSQL_ROOT_PASSWORD=mysql
    ports:
      - "3306:3306"

  zookeeper:
    hostname: zookeeper
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  mykafka:
    image: bitnami/kafka:2.6.0-debian-10-r3
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: mykafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
    depends_on:
      - zookeeper

  rabbit:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:latest
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    restart: always

  bastion:
    image: ubuntu:22.04
    command: sleep 10000 

volumes:
  registry:
  nifi:
